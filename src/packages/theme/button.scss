/*
* @Author: Administrator
* @Date:   2018-07-23 14:23:04
 * @Last Modified by: mikey.zhaopeng
 * @Last Modified time: 2018-09-10 00:09:17
*/
@import './common/variable.scss';
@import './mixins/button';
@import './mixins/mixin.scss';
@import './mixins/util.scss';
// .ep-button {
// 	display: inline-block;
// 	line-height: 1;
// 	white-space: nowrap;
// 	cursor: pointer;
// 	background: #fff;
// 	border: 1px solid #dcdfe6;
// 	color: #606266;
// 	-webkit-appearance: none;
// 	text-align: center;
// 	box-sizing: border-box;
// 	outline: none;
// 	margin: 0;
// 	transition: all 0.1s;
// 	font-weight: 500;
// 	user-select: none;
// 	padding: 12px 20px;
// 	font-size: 14px;
// 	border-radius: 4px;
// 	&:focus, &:hover {
// 		color: $primary;
// 		border-color: lighten($primary, 10%);
// 		background-color: lighten($primary, 33.78%);
// 	};
// 	&:active {
// 		color: darken($primary, 10%);
// 		border-color: darken($primary, 10%);
// 		outline: none;
// 	};
// 	&.is-plain:focus, &.is-plain:hover {
// 		background-color: $color-pure;
// 		border-color: $primary;
// 		color: $primary;
// 	}
// 	&.is-plain.is-active, &.is-plain:active {
// 		border-color: darken($primary, 10%);
// 		color: darken($primary, 10%);
// 	}
// 	&.is-round {
// 		border-radius: 20px;
// 	}
// }

// @each $button-type, $type in (primary: $primary, success: $success, danger: $danger, info: $info) {
// 	.ep-button--#{$button-type} {
// 		@include custom-button($type)
// 	}
// 	.ep-button--#{$button-type}.is-plain {
// 		@include plain-button($type)
// 	}
// }

// @each $button-size in (medium, small, mini) {
// 	.ep-button--#{$button-size} {
// 		@include button-size($button-size)
// 	}
// }

@include b(button) {
  display: inline-block;
  line-height: 1;
  white-space: nowrap;
  cursor: pointer;
  background: $--button-default-fill;
  border: $--border-base;
  border-color: $--button-default-border;
  color: $--button-default-color;
  -webkit-appearance: none;
  text-align: center;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  transition: .1s;
  font-weight: $--button-font-weight;
  @include utils-user-select(none);
  & + .ep-button {
    margin-left: 10px;
  }

  @include button-size($--button-padding-vertical, $--button-padding-horizontal, $--button-font-size, $--button-border-radius);

  &:hover, &:focus {
    color: $--color-primary;
    border-color: $--color-primary-light-7;
    background-color: $--color-primary-light-9;
  }

  &:active {
    color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
    border-color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
    outline: none;
  }

  &::-moz-focus-inner {
    border: 0;
  }
  /*
    图标位置预留
  */
  & [class*="icon-"] {
    & + span {
      margin-left: 5px;
    }
  }
  /*
  * $modifier可以是对象
  **/
  /*
  * .is-plain
  */
  @include when(plain) {
    &:hover, &:focus {
      background-color: $--color-white;
      border-color: $--color-primary;
      color: $--color-primary;
    }
    &:active {
      background-color: $--color-white;
      border-color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
      color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
      outline: none;
    }
  }

  @include when(active) {
    color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
    border-color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
  }

  @include when(disabled) {
    &, &:hover, &:focus {
      color: $--button-disabled-color;
      background-image: none;
      background-color: $--button-disabled-fill;
      border-color: $--button-disabled-border;
      cursor: not-allowed;
    }

    &.el-button--text {
      background-color: transparent;
    }

    &.is-plain {
      &, &:hover, &:focus {
        color: $--button-disabled-color;
        background-color: $--color-white;
        border-color: $--button-disabled-border;
      }
    }
  }

  @include when(loading) {
    position: relative;
    pointer-events: none;
    &:before {
      pointer-events: none;
      content: '';
      position: absolute;
      left: -1px;
      top: -1px;
      right:-1px;
      bottom: -1px;
      border-radius: inherit;
      background-color: rgba(255,255,255,0.35);
    }
  }

  @include when(round) {
    border-radius: 20px;
    padding: 12px 23px;
  }
  @include when(circle) {
    border-radius: 50%;
    padding: $--button-padding-vertical;
  }

  @include m (primary) {
    @include button-variant($--button-primary-color, $--button-primary-fill, $--button-primary-border);
  }
  @include m (success) {
    @include button-variant($--button-success-color, $--button-success-fill, $--button-success-border);
  }
  @include m (warning) {
    @include button-variant($--button-warning-color, $--button-warning-fill, $--button-warning-border);
  }
  @include m (danger) {
    @include button-variant($--button-danger-color, $--button-danger-fill, $--button-danger-border);
  }
  @include m (info) {
    @include button-variant($--button-info-color, $--button-info-fill, $--button-info-border);
  }

  @include m (medium) {
    @include button-size($--button-medium-padding-vertical, $--button-medium-padding-horizontal, $--button-medium-font-size, $--button-medium-border-radius);
    @include when(circle) {
      padding: $--button-medium-padding-vertical;
    }
  }
  @include m (small) {
    @include button-size($--button-small-padding-vertical, $--button-small-padding-horizontal, $--button-small-font-size, $--button-small-border-radius);
    @include when(circle) {
      padding: $--button-small-padding-vertical;
    }
  }
  @include m (mini) {
    @include button-size($--button-mini-padding-vertical, $--button-mini-padding-horizontal, $--button-mini-font-size, $--button-mini-border-radius);
    @include when(circle) {
      padding: $--button-mini-padding-vertical;
    }
  }
  @include m (text) {
    border-color: transparent;
    color: $--color-primary;
    background: transparent;
    padding-left: 0;
    padding-right: 0;

    &:hover, &:focus {
      color: mix($--color-white, $--color-primary, $--button-hover-tint-percent);
      border-color: transparent;
      background-color: transparent;
    }
    &:active {
      color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
      border-color: transparent;
      background-color: transparent;
    }

    &.is-disabled, &.is-disabled:hover, &.is-disabled:focus {
      border-color: transparent;
    }
  }
}

@keyframes ep-button-loading {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.ep-icon-loading {
  animation: ep-button-loading linear infinite 3s;
}